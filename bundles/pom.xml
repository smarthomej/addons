<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.smarthomej.addons</groupId>
    <artifactId>org.smarthomej.addons.reactor</artifactId>
    <version>3.1.2-SNAPSHOT</version>
  </parent>

  <groupId>org.smarthomej.addons.bundles</groupId>
  <artifactId>org.smarthomej.addons.reactor.bundles</artifactId>
  <packaging>pom</packaging>

  <name>SmartHome/J Add-ons :: Bundles</name>

  <modules>
    <!-- common -->
    <module>org.smarthomej.commons</module>
    <!-- bindings -->
    <module>org.smarthomej.binding.androiddebugbridge</module>
    <module>org.smarthomej.binding.amazonechocontrol</module>
    <module>org.smarthomej.binding.deconz</module>
    <module>org.smarthomej.binding.dmx</module>
    <module>org.smarthomej.binding.http</module>
    <module>org.smarthomej.binding.irobot</module>
    <module>org.smarthomej.binding.knx</module>
    <module>org.smarthomej.binding.mail</module>
    <module>org.smarthomej.binding.mpd</module>
    <module>org.smarthomej.binding.notificationsforfiretv</module>
    <module>org.smarthomej.binding.onewire</module>
    <module>org.smarthomej.binding.snmp</module>
    <module>org.smarthomej.binding.tcpudp</module>
    <module>org.smarthomej.binding.tr064</module>
    <!-- persistence -->
    <module>org.smarthomej.persistence.influxdb</module>
    <!-- transformations -->
    <module>org.smarthomej.transform.format</module>
    <!-- manager -->
    <module>org.smarthomej.io.repomanager</module>
  </modules>

  <properties>
    <m2e.jdt.annotationpath>target/dependency</m2e.jdt.annotationpath>
    <dep.noembedding/>
  </properties>

  <dependencies>
    <!-- Annotations -->
    <dependency>
      <groupId>org.lastnpe.eea</groupId>
      <artifactId>eea-all</artifactId>
      <version>${eea.version}</version>
    </dependency>
    <!-- openHAB core -->
    <dependency>
      <groupId>org.openhab.core.bom</groupId>
      <artifactId>org.openhab.core.bom.compile</artifactId>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.openhab.core.bom</groupId>
      <artifactId>org.openhab.core.bom.openhab-core</artifactId>
      <type>pom</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-net</groupId>
          <artifactId>commons-net</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.openhab.core.bom</groupId>
      <artifactId>org.openhab.core.bom.test</artifactId>
      <type>pom</type>
      <scope>test</scope>
    </dependency>
    <!-- Distribution -->
    <dependency>
      <groupId>org.apache.karaf.features</groupId>
      <artifactId>framework</artifactId>
      <version>${karaf.version}</version>
      <type>kar</type>
      <optional>true</optional>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Repositories -->
    <dependency>
      <groupId>org.apache.karaf.features</groupId>
      <artifactId>standard</artifactId>
      <version>${karaf.version}</version>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <configuration>
            <archive>
              <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
            </archive>
            <skipIfEmpty>true</skipIfEmpty>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.karaf.tooling</groupId>
          <artifactId>karaf-maven-plugin</artifactId>
          <version>${karaf.version}</version>
          <extensions>true</extensions>
          <configuration>
            <startLevel>80</startLevel>
            <aggregateFeatures>true</aggregateFeatures>
            <checkDependencyChange>true</checkDependencyChange>
            <failOnDependencyChange>false</failOnDependencyChange>
            <logDependencyChanges>true</logDependencyChanges>
            <overwriteChangedDependencies>true</overwriteChangedDependencies>
          </configuration>
          <executions>
            <execution>
              <id>compile</id>
              <goals>
                <goal>features-generate-descriptor</goal>
              </goals>
              <phase>generate-resources</phase>
              <configuration>
                <inputFile>${feature.directory}</inputFile>
              </configuration>
            </execution>
            <execution>
              <id>karaf-feature-verification</id>
              <goals>
                <goal>verify</goal>
              </goals>
              <phase>verify</phase>
              <configuration>
                <descriptors combine.children="append">
                  <!-- Apache Karaf -->
                  <descriptor>mvn:org.apache.karaf.features/framework/${karaf.version}/xml/features</descriptor>
                  <descriptor>mvn:org.apache.karaf.features/standard/${karaf.version}/xml/features</descriptor>
                  <!-- Current feature under verification -->
                  <descriptor>file:${project.build.directory}/feature/feature.xml</descriptor>
                </descriptors>
                <distribution>org.apache.karaf.features:framework</distribution>
                <javase>${oh.java.version}</javase>
                <framework>
                  <feature>framework</feature>
                </framework>
                <features>
                  <feature>smarthomej-*</feature>
                </features>
                <verifyTransitive>false</verifyTransitive>
                <ignoreMissingConditions>true</ignoreMissingConditions>
                <fail>first</fail>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>biz.aQute.bnd</groupId>
        <artifactId>bnd-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.karaf.tooling</groupId>
        <artifactId>karaf-maven-plugin</artifactId>
      </plugin>
      <!-- embed compile time dependencies by unpacking -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <id>embed-dependencies</id>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeScope>runtime</includeScope>
              <includeTypes>jar</includeTypes>
              <excludeGroupIds>javax.activation,org.apache.karaf.features,org.lastnpe.eea</excludeGroupIds>
              <excludeArtifactIds>${dep.noembedding}</excludeArtifactIds>
              <outputDirectory>${project.build.directory}/classes</outputDirectory>
              <overWriteReleases>true</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
              <excludeTransitive>true</excludeTransitive>
              <type>jar</type>
            </configuration>
          </execution>
          <execution>
            <id>unpack-eea</id>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.lastnpe.eea</groupId>
                  <artifactId>eea-all</artifactId>
                  <version>${eea.version}</version>
                  <overWrite>true</overWrite>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- suppress embedding of dependencies -->
    <profile>
      <id>no-embed-dependencies</id>
      <activation>
        <file>
          <exists>noEmbedDependencies.profile</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>embed-dependencies</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- no-javadoc: Sonatype requires a javadoc artifact for all bundles that contain classes. The maven-java-doc-plugin
      is not able to generate that artifact if no public classes are present, therefore we generate an empty jar. -->
    <profile>
      <id>empty-javadoc</id>
      <activation>
        <file>
          <exists>src/main/java</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-empty-javadoc-jar</id>
                <phase>package</phase>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <classifier>javadoc</classifier>
                  <classesDirectory>${basedir}/javadoc</classesDirectory>
                  <skipIfEmpty>false</skipIfEmpty>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- javadoc: If we want to generate non-empty javadoc, activate this profile -->
    <profile>
      <id>attach-javadoc</id>
      <activation>
        <file>
          <exists>javadoc.profile</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <!-- deactivate generation of empty javadoc artifact -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-empty-javadoc</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.2.0</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <source>8</source>
              <detectJavaApiLink>false</detectJavaApiLink>
              <failOnError>true</failOnError>
              <doclint>none</doclint>
              <excludePackageNames>*.internal,*.internal.*</excludePackageNames>
              <!-- The search function is broken without the workaround below -->
              <!-- See: https://stackoverflow.com/questions/52326318/maven-javadoc-search-redirects-to-undefined-url -->
              <additionalJOption>--allow-script-in-comments</additionalJOption>
              <bottom>
                <![CDATA[
                <script>
                if (typeof useModuleDirectories !== 'undefined') {
                  useModuleDirectories = false;
                }
                </script>
              ]]>
              </bottom>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
